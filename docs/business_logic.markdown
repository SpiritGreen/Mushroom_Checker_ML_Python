# Описание бизнес-логики

## Бизнес-сущности

### Пользователи
- **Описание**: Пользователи регистрируются, аутентифицируются, пополняют баланс и используют сервис для предсказаний.
- **Функции**:
  - `register_user`: Создаёт пользователя с начальным балансом 10.0.
  - `authenticate_user`: Проверяет имя и пароль, возвращает пользователя.
  - `deduct_balance`: Списывает кредиты с баланса.
  - `increase_balance`: Пополняет баланс пользователя.
  - `get_user`: Получает данные пользователя по имени.

### Модели
- **Описание**: Встроенные ML-модели для предсказаний (RandomForest, GradientBoosting, NeuralNetwork).
- **Функции**:
  - `get_available_models`: Возвращает список доступных моделей с их ID, именем и стоимостью.

### Предсказания
- **Описание**: Выполнение предсказаний на основе входных данных с использованием асинхронных задач Celery.
- **Функции**:
  - `read_input_file`: Читает CSV/XLSX файлы.
  - `validate_input_data`: Проверяет наличие и типы столбцов.
  - `make_prediction`: Выполняет предсказание с использованием выбранной модели (асинхронно).
  - `create_prediction`: Создаёт запись предсказания со статусом "pending".

### Транзакции
- **Описание**: Учёт пополнения баланса и списания кредитов за предсказания.
- **Функции**:
  - `deduct_balance`: Списывает кредиты после успешного предсказания.
  - `increase_balance`: Пополняет баланс пользователя.
  - `create_transaction`: Записывает транзакцию в базу данных.

## Взаимодействие
1. Пользователь регистрируется через эндпоинт `/register` и получает начальный баланс 10.0.
2. Пользователь аутентифицируется через `/token`, получая JWT-токен.
3. Пользователь проверяет доступные модели через `/models`.
4. При необходимости пополняет баланс через `/payment`.
5. Пользователь загружает данные и запускает предсказание через `/predict`:
   - Сервис проверяет баланс и наличие модели.
   - Создаётся запись предсказания со статусом "pending".
   - Задача отправляется в Celery для асинхронного выполнения.
   - Списываются кредиты, записывается транзакция.
6. Пользователь проверяет статус предсказания через `/predictions/{prediction_id}`.
7. (Опционально) Пользователь получает уведомление о завершении через Telegram-бота.
8. Пользователь может проверить текущий баланс через `/balance` и историю транзакций через `/transactions`.

## Эндпоинты API
- **POST /register**: Регистрация пользователя.
- **POST /token**: Аутентификация и получение токена.
- **GET /users/me**: Информация о текущем пользователе.
- **GET /models**: Список доступных моделей.
- **POST /predict**: Запуск предсказания.
- **GET /predictions/{id}**: Статус и результат предсказания.
- **POST /payment**: Пополнение баланса.
- **GET /balance**: Текущий баланс.
- **GET /transactions**: История транзакций.